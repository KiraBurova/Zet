// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-name: 'arrow';
$arrow-x: 49px;
$arrow-y: 70px;
$arrow-offset-x: -49px;
$arrow-offset-y: -70px;
$arrow-width: 24px;
$arrow-height: 13px;
$arrow-total-width: 95px;
$arrow-total-height: 95px;
$arrow-image: './assets/img/sprite.png';
$arrow: (49px, 70px, -49px, -70px, 24px, 13px, 95px, 95px, './assets/img/sprite.png', 'arrow', );
$icon-1-name: 'icon-1';
$icon-1-x: 25px;
$icon-1-y: 70px;
$icon-1-offset-x: -25px;
$icon-1-offset-y: -70px;
$icon-1-width: 24px;
$icon-1-height: 24px;
$icon-1-total-width: 95px;
$icon-1-total-height: 95px;
$icon-1-image: './assets/img/sprite.png';
$icon-1: (25px, 70px, -25px, -70px, 24px, 24px, 95px, 95px, './assets/img/sprite.png', 'icon-1', );
$icon-2-name: 'icon-2';
$icon-2-x: 70px;
$icon-2-y: 0px;
$icon-2-offset-x: -70px;
$icon-2-offset-y: 0px;
$icon-2-width: 25px;
$icon-2-height: 25px;
$icon-2-total-width: 95px;
$icon-2-total-height: 95px;
$icon-2-image: './assets/img/sprite.png';
$icon-2: (70px, 0px, -70px, 0px, 25px, 25px, 95px, 95px, './assets/img/sprite.png', 'icon-2', );
$icon-3-name: 'icon-3';
$icon-3-x: 70px;
$icon-3-y: 25px;
$icon-3-offset-x: -70px;
$icon-3-offset-y: -25px;
$icon-3-width: 25px;
$icon-3-height: 25px;
$icon-3-total-width: 95px;
$icon-3-total-height: 95px;
$icon-3-image: './assets/img/sprite.png';
$icon-3: (70px, 25px, -70px, -25px, 25px, 25px, 95px, 95px, './assets/img/sprite.png', 'icon-3', );
$icon-4-name: 'icon-4';
$icon-4-x: 0px;
$icon-4-y: 70px;
$icon-4-offset-x: 0px;
$icon-4-offset-y: -70px;
$icon-4-width: 25px;
$icon-4-height: 25px;
$icon-4-total-width: 95px;
$icon-4-total-height: 95px;
$icon-4-image: './assets/img/sprite.png';
$icon-4: (0px, 70px, 0px, -70px, 25px, 25px, 95px, 95px, './assets/img/sprite.png', 'icon-4', );
$icon-5-name: 'icon-5';
$icon-5-x: 70px;
$icon-5-y: 50px;
$icon-5-offset-x: -70px;
$icon-5-offset-y: -50px;
$icon-5-width: 25px;
$icon-5-height: 19px;
$icon-5-total-width: 95px;
$icon-5-total-height: 95px;
$icon-5-image: './assets/img/sprite.png';
$icon-5: (70px, 50px, -70px, -50px, 25px, 19px, 95px, 95px, './assets/img/sprite.png', 'icon-5', );
$icon-6-name: 'icon-6';
$icon-6-x: 0px;
$icon-6-y: 0px;
$icon-6-offset-x: 0px;
$icon-6-offset-y: 0px;
$icon-6-width: 35px;
$icon-6-height: 35px;
$icon-6-total-width: 95px;
$icon-6-total-height: 95px;
$icon-6-image: './assets/img/sprite.png';
$icon-6: (0px, 0px, 0px, 0px, 35px, 35px, 95px, 95px, './assets/img/sprite.png', 'icon-6', );
$icon-7-name: 'icon-7';
$icon-7-x: 35px;
$icon-7-y: 0px;
$icon-7-offset-x: -35px;
$icon-7-offset-y: 0px;
$icon-7-width: 35px;
$icon-7-height: 35px;
$icon-7-total-width: 95px;
$icon-7-total-height: 95px;
$icon-7-image: './assets/img/sprite.png';
$icon-7: (35px, 0px, -35px, 0px, 35px, 35px, 95px, 95px, './assets/img/sprite.png', 'icon-7', );
$icon-8-name: 'icon-8';
$icon-8-x: 0px;
$icon-8-y: 35px;
$icon-8-offset-x: 0px;
$icon-8-offset-y: -35px;
$icon-8-width: 35px;
$icon-8-height: 35px;
$icon-8-total-width: 95px;
$icon-8-total-height: 95px;
$icon-8-image: './assets/img/sprite.png';
$icon-8: (0px, 35px, 0px, -35px, 35px, 35px, 95px, 95px, './assets/img/sprite.png', 'icon-8', );
$icon-9-name: 'icon-9';
$icon-9-x: 35px;
$icon-9-y: 35px;
$icon-9-offset-x: -35px;
$icon-9-offset-y: -35px;
$icon-9-width: 35px;
$icon-9-height: 35px;
$icon-9-total-width: 95px;
$icon-9-total-height: 95px;
$icon-9-image: './assets/img/sprite.png';
$icon-9: (35px, 35px, -35px, -35px, 35px, 35px, 95px, 95px, './assets/img/sprite.png', 'icon-9', );
$spritesheet-width: 95px;
$spritesheet-height: 95px;
$spritesheet-image: './assets/img/sprite.png';
$spritesheet-sprites: ($arrow, $icon-1, $icon-2, $icon-3, $icon-4, $icon-5, $icon-6, $icon-7, $icon-8, $icon-9, );
$spritesheet: (95px, 95px, './assets/img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
